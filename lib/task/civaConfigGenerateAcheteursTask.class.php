<?php

class civaConfigGenerateAcheteursTask extends sfBaseTask
{
  protected function configure()
  {
    // // add your own arguments here
    // $this->addArguments(array(
    //   new sfCommandArgument('my_arg', sfCommandArgument::REQUIRED, 'My argument'),
    // ));

    $this->addOptions(array(
      new sfCommandOption('application', null, sfCommandOption::PARAMETER_REQUIRED, 'The application name'),
      new sfCommandOption('env', null, sfCommandOption::PARAMETER_REQUIRED, 'The environment', 'dev'),
      new sfCommandOption('connection', null, sfCommandOption::PARAMETER_REQUIRED, 'The connection name', 'default'),
      // add your own options here
    ));

    $this->namespace        = 'civa-config';
    $this->name             = 'generate-acheteurs';
    $this->briefDescription = '';
    $this->detailedDescription = <<<EOF
The [generate-acheteurs|INFO] task does things.
Call it with:

  [php symfony generate-acheteurs|INFO]
EOF;
  }

  protected function execute($arguments = array(), $options = array())
  {
    // initialize the database connection
    $databaseManager = new sfDatabaseManager($this->configuration);
    $connection = $databaseManager->getDatabase($options['connection'])->getConnection();

    $docs = sfCouchdbManager::getClient('Acheteur')->getAll();
    $acheteurs_negociant = array();
    $acheteurs_cave = array();
    $acheteurs_mout = array();

    foreach($docs as $id => $anyone) {
        $doc = $docs->get($id);
        if ($doc->getQualite() == "Negociant") {
            $acheteurs_negociant[$doc->getCvi()]['cvi'] = $doc->getCvi();
            $acheteurs_negociant[$doc->getCvi()]['commune'] = $doc->getCommune();
            $acheteurs_negociant[$doc->getCvi()]['nom'] = $doc->getNom();
        } elseif($doc->getQualite() == "Cooperative") {
            $acheteurs_cave[$doc->getCvi()]['cvi'] = $doc->getCvi();
            $acheteurs_cave[$doc->getCvi()]['commune'] = $doc->getCommune();
            $acheteurs_cave[$doc->getCvi()]['nom'] = $doc->getNom();
        }
        $acheteurs_mout[$doc->getCvi()]['cvi'] = $doc->getCvi();
        $acheteurs_mout[$doc->getCvi()]['commune'] = $doc->getCommune();
        $acheteurs_mout[$doc->getCvi()]['nom'] = $doc->getNom();
    }

    $retval = "<?php\n".
              "// auto-generated by %s\n".
              "// date: %s\nreturn %s;\n";
    
    $acheteurs_negociant_data = sprintf($retval, __CLASS__, date('Y/m/d H:i:s'), var_export($acheteurs_negociant, true));
    $acheteurs_cave_data = sprintf($retval, __CLASS__, date('Y/m/d H:i:s'), var_export($acheteurs_cave, true));
    $acheteurs_mout_data = sprintf($retval, __CLASS__, date('Y/m/d H:i:s'), var_export($acheteurs_mout, true));

    $filename = sfConfig::get('sf_data_dir').'/acheteurs-negociant.php';
    if (file_exists($filename)) {
        unlink($filename);
    }
    file_put_contents($filename, $acheteurs_negociant_data);

    $this->logSection('data created', $filename);

    $filename = sfConfig::get('sf_data_dir').'/acheteurs-cave.php';
    if (file_exists($filename)) {
        unlink($filename);
    }
    file_put_contents($filename, $acheteurs_cave_data);

    $this->logSection('data created', $filename);

    $filename = sfConfig::get('sf_data_dir').'/acheteurs-mout.php';
    if (file_exists($filename)) {
        unlink($filename);
    }
    file_put_contents($filename, $acheteurs_mout_data);

    $this->logSection('data created', $filename);

  }
}
