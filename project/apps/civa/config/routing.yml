# *********** TIERS ***********

tiers:
  url: /tiers
  param: { module: tiers, action: login }

mon_espace_civa:
  url:   /mon_espace_civa/:identifiant
  param: { module: tiers, action: monEspaceCiva }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_dr_compte:
  url:   /mon_espace_civa_compte/:identifiant/dr
  param: { module: tiers, action: monEspaceCompteDR }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_dr:
  url:   /mon_espace_civa/:identifiant/dr
  param: { module: tiers, action: monEspaceDR }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_dr_acheteur_compte:
  url:   /mon_espace_civa_compte/:identifiant/dr_acheteur
  param: { module: tiers, action: monEspaceCompteDRAcheteur }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_dr_acheteur:
  url:   /mon_espace_civa/:identifiant/dr_acheteur
  param: { module: tiers, action: monEspaceDRAcheteur }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_ds_compte:
  url:   /mon_espace_civa_compte/:identifiant/ds/:type
  param: { module: tiers, action: monEspaceCompteDS }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_ds:
  url:   /mon_espace_civa/:identifiant/ds/:type
  param: { module: tiers, action: monEspaceDS }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_gamma_compte:
  url:   /mon_espace_civa_compte/:identifiant/gamma
  param: { module: tiers, action: monEspaceCompteGamma }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_gamma:
  url:   /mon_espace_civa/:identifiant/gamma
  param: { module: tiers, action: monEspaceGamma }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_vrac_compte:
  url:   /mon_espace_civa_compte/:identifiant/vrac
  param: { module: tiers, action: monEspaceCompteVrac }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

mon_espace_civa_vrac:
  url:   /mon_espace_civa/:identifiant/vrac
  param: { module: tiers, action: monEspaceVrac }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

delegation:
  url: /delegation
  param: { module: tiers, action: delegation}

migration_compte:
  url: /migration_compte
  param: { module: tiers, action: migrationCompte}

# *********** VRAC ***********

vrac_selection_type:
  url: /vrac/selection-type/:type
  param: { module: vrac, action: selectionType, type: null }
vrac_nouveau:
  url: /vrac/nouveau
  param: { module: vrac, action: nouveau }
vrac_historique:
  url: /vrac/:identifiant/historique
  param: { module: vrac, action: historique }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

vrac_export_csv:
  url: /vrac/:identifiant/export/csv
  param: { module: vrac, action: exportCSV }
  class: CompteRoute
  options: { model: Compte, type: object }
  requirements: { sf_method: [get, post] }

vrac_soussigne_informations:
  url: /vrac/:numero_contrat/soussignes-informations
  param: { module: vrac, action: soussigneInformations }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_supprimer:
  url: /vrac/:numero_contrat/supprimer
  param: { module: vrac, action: supprimer }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]

vrac_forcer_cloture:
  url: /vrac/:numero_contrat/forcer-cloture
  param: { module: vrac, action: forcerCloture }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]

vrac_cloture:
  url: /vrac/:numero_contrat/cloture
  param: { module: vrac, action: cloture }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_fiche:
  url: /vrac/:numero_contrat/fiche
  param: { module: vrac, action: fiche }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_validation:
  url: /vrac/:numero_contrat/fiche/validation
  param: { module: vrac, action: validation }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_export_pdf:
  url: /vrac/:numero_contrat/pdf
  param: { module: vrac_export, action: PDF, odg: 0}
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_export_odg:
  url: /vrac/:numero_contrat/odg
  param: { module: vrac_export, action: PDF, odg: 1}
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_annuaire_commercial:
  url: /vrac/:numero_contrat/annuaire/commercial
  param: { module: vrac, action: annuaireCommercial }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_annuaire:
  url: /vrac/:numero_contrat/annuaire/:acteur/:type
  param: { module: vrac, action: annuaire }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
    allow_empty: true
  requirements:
    sf_method: [get, post]
vrac_etape:
  url: /vrac/:numero_contrat/:etape
  param: { module: vrac, action: etape }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
    allow_empty: true
  requirements:
    sf_method: [get, post]
vrac_ajout_produit:
  url: /vrac/:numero_contrat/:etape/ajouter
  param: { module: vrac, action: ajouterProduit }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_ajout_produit_lieux:
  url: /vrac/:numero_contrat/:etape/ajouter/lieux
  param: { module: vrac, action: ajouterProduitLieux }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_ajout_produit_cepages:
  url: /vrac/:numero_contrat/:etape/ajouter/cepages
  param: { module: vrac, action: ajouterProduitCepages }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]
vrac_ajout_produit_vtsgn:
  url: /vrac/:numero_contrat/:etape/ajouter/vtsgn
  param: { module: vrac, action: ajouterProduitVtsgn }
  class: VracRoute
  options:
    model:    Vrac
    type:     object
  requirements:
    sf_method: [get, post]

telecharger_la_notice_vrac:
  url:   /vrac/telecharger_la_notice
  param: { module: vrac, action: downloadNotice }

# *********** ANNUAIRE *********
annuaire:
  url: /annuaire
  param: { module: annuaire, action: index }

annuaire_retour:
  url: /annuaire/retour
  param: { module: annuaire, action: retour }
annuaire_selectionner:
  url: /annuaire/selectionner/:type
  param: { module: annuaire, action: selectionner, type: null }
annuaire_commercial_ajouter:
  url: /annuaire/ajouter/commercial
  param: { module: annuaire, action: ajouterCommercial }
annuaire_ajouter:
  url: /annuaire/ajouter/:type/:identifiant
  param: { module: annuaire, action: ajouter }
annuaire_supprimer:
  url: /annuaire/supprimer/:type/:id
  param: { module: annuaire, action: supprimer }


# *********** COMPTE ***********
login:
  url:   /
  param: { module: compte, action: login }

login_no_cas:
  url:   /login_no_cas
  param: { module: compte, action: loginNoCas }

logout:
  url:   /logout
  param: { module: compte, action: logout }

compte:
  url: /compte
  param: { module: compte, action: first }

compte_creation:
  url: /compte/creation
  param: { module: compte, action: creation }

compte_modification_oublie:
  url: /compte/mot_de_passe_oublie
  param: { module: compte, action: modificationOublie }

compte_modification:
  url: /mon_compte
  param: { module: compte, action: modification }

compte_mot_de_passe_oublie_login:
  url: /mdpo/login/:login/:mdp
  param: { module: compte, action: motDePasseOublieLogin }

compte_mot_de_passe_oublie:
  url: /mot_de_passe_oublie
  param: { module: compte, action: motDePasseOublie }

compte_mot_de_passe_oublie_confirm:
  url: /mot_de_passe_oublie/confirm
  param: { module: compte, action: motDePasseOublieConfirm }

compte_droits:
  url: /mon_compte/gestion_des_droits
  param: { module: compte, action: droits }

compte_personne_ajouter:
  url: /mon_compte/personne/ajouter
  param: { module: compte, action: personneAjouter }

compte_personne_modifier:
  url: /mon_compte/personne/modifier/:id
  param: { module: compte, action: personneModifier }


# *********** GAMMA ***********

gamma:
  url:   /gamma/:identifiant/inscription
  param: { module: gamma, action: process }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

gamma_telecharger_la_notice:
  url:   /gamma/telecharger_la_notice
  param: { module: gamma, action: downloadNotice }

gamma_telecharger_la_liste_nomenclature:
  url:   /gamma/telecharger_la_liste_nomenclature
  param: { module: gamma, action: downloadNomenclatures }

gamma_telecharger_la_procedure_enlevement_propriete:
  url:   /gamma/telecharger_la_procedure_enlevement_propriete
  param: { module: gamma, action: downloadEnlevementPropriete }

gamma_telecharger_l_adhesion:
  url:   /gamma/telecharger_l_adhesion
  param: { module: gamma, action: downloadAdhesion }

# *********** ADMIN ***********

admin-login:
  url: /admin/login
  param: { module: admin, action: login }

admin-logout:
  url: /admin/logout
  param: { module: admin, action: login }

admin:
  url: /admin
  param: { module: admin, action: index }

admin_gamma:
  url:   /admin/gamma
  param: { module: admin, action: gamma }

admin_back_to_the_future:
  url: /admin_back_to_the_future
  param: { module: admin, action: backToFuture }

admin_back_to_now:
  url: /admin_back_to_now
  param: { module: admin, action: backToNow }

admin_etablissements_diff_chargement:
  url: /admin/etablissements-diff-chargement
  param: { module: admin, action: etablissementDiffChargement }

admin_etablissements_diff:
  url: /admin/etablissements-diff
  param: { module: admin, action: etablissementDiff }

delegate_mode_retour_espace_civa:
   url: /tiers/retour_mon_espace
   param: { module: tiers, action: signoutByCompteDelegue }

# *********** DR ***********

dr_telecharger_la_notice:
  url:   /dr_telecharger_la_notice
  param: { module: dr, action: downloadNotice }

dr_visualisation_avant_import:
  url:   /dr_visualisation_avant_import/:identifiant/:campagne
  param: { module: dr, action: visualisationAvantImport }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

dr_init:
  url:   /dr_initialisation/:identifiant/:campagne
  param: { module: dr, action: init }
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

dr_invalider_recoltant:
  url:   /dr/:id/invalider_recoltant
  param: { module: dr, action: invaliderRecoltant }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_invalider_civa:
  url:   /dr/:id/invalider_civa
  param: { module: dr, action: invaliderCiva }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_autorisation:
  url:   /dr/:id/autorisation
  param: { module: dr, action: autorisation }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_transmission_ava:
  url:   /declaration/transmission
  param: { module: dr, action: transmissionAva }

dr_transmission:
  url:   /dr/:id/transmission
  param: { module: dr, action: transmission }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_message:
  url:   /dr/:id/message
  param: { module: dr, action: flashPage }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_notice_evolutions:
  url: /dr/:id/notice_evolutions
  param: { module: dr, action: noticeEvolutions}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_exploitation:
  url:   /dr/:id/exploitation
  param: { module: dr, action: exploitation }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_repartition:
  url:   /dr/:id/repartition
  param: { module: dr, action: repartition }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_repartition_lieu:
  url:   /dr/:id/repartition_lieu
  param: { module: dr, action: repartitionLieu }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_repartition_lieu_delete:
  url:  /dr/:id/reparition_lieu/suppression
  param: {module: dr, action: repartitionLieuDelete }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_autres:
  url:   /dr/:id/autres
  param: { module: dr, action: autres }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_no_recolte:
  url:   /dr/:id/no_recolte
  param: { module: dr, action: noRecolte}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_repartition_acheteurs:
  url:   /dr/:id/repartition_acheteurs
  param: { module: dr, action: repartitionTableRowItemAjax}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte:
  url:   /dr/:id/recolte
  param: { module: dr_recolte, action: recolte}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_produit:
  url:    /dr/:id/recolte/produit
  param: { module: dr_recolte, action: produit}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_produit_ajout:
  url:    /dr/:id/recolte/produit_ajout
  param: { module: dr_recolte, action: produitAjout}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_produit_edition:
  url:    /dr/:id/recolte/produit_edition
  param: { module: dr_recolte, action: produitEdition}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_produit_suppression:
  url:    /dr/:id/recolte/produit_suppression
  param: { module: dr_recolte, action: produitSuppression}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_noeud:
  url:    /dr/:id/recolte/noeud
  param: { module: dr_recolte, action: produitNoeud}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_correspondance_mention:
  url:    /dr/:id/recolte/correspondance_mention
  param: { module: dr_recolte, action: produitCorrepondanceMention}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_noeud_precedent:
  url:    /dr/:id/recolte/noeud/precedent
  param: { module: dr_recolte, action: produitNoeudPrecedent}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_noeud_suivant:
  url:    /dr/:id/recolte/noeud/suivant
  param: { module: dr_recolte, action: produitNoeudSuivant}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_recapitulatif:
  url:    /dr/:id/recolte/racapitulatif
  param: {module: dr_recolte, action: recapitulatif }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_motif_non_recolte:
  url:    /dr/:id/recolte/motif_non_recolte
  param: { module: dr_recolte, action: motifNonRecolte }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_add_appellation:
  url:    /dr/:id/recolte/ajout_appellation
  param: { module: dr_recolte, action: ajoutAppellationAjax }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_add_lieu:
  url:    /dr/:id/recolte/ajout_lieu
  param: { module: dr_recolte, action: ajoutLieuAjax }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_add_acheteur:
  url:   dr/:id/recolte/ajout_acheteur
  param: { module: dr_recolte, action: ajoutAcheteurAjax }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_rendements_max:
  url:   /dr/:id/recolte/rendements_max
  param: { module: dr_recolte, action: rendementsMaxAjax}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_recolte_erreur_log:
  url:   /dr/:id/recolte_erreur_log
  param: {module: dr, action: setFlashLog }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_validation:
  url:   /dr/:id/validation
  param: { module: dr, action: validation }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_visualisation:
  url: /dr/:id/visualisation
  param: {module: dr, action: visualisation }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_confirmation:
  url:   /dr/:id/confirmation
  param: { module: dr, action: confirmation }
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_pdf:
  url: /dr/:identifiant/pdf/:annee
  param: {module: dr_export, action: pdf}
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

dr_csv:
  url: /dr/:id/csv
  param: {module: dr_export, action: csv}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_send_email_pdf:
  url: /dr/:id/send-email-pdf
  param: {module: dr, action: sendPdf}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_send_email_acheteurs_pdf:
  url: /dr/:id/send-email-acheteurs-pdf
  param: {module: dr, action: sendPdfAcheteurs}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_feed_back:
  url: /dr/:id/retour-experience
  param: {module: dr, action: feedBack}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_feed_back_confirmation:
  url: /dr/:id/retour-experience-confirmation
  param: {module: dr, action: feedBackConfirmation}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

dr_xml:
  url: /dr/:id/xml
  param: {module: dr_export, action: xml}
  class: DRRoute
  options: { model: DR, type: object }
  requirements: { sf_method: [get, post] }

# *********** DR ***********

csv_comptes:
  url: /comptes/csv
  param: {module: dr_export, action: comptesCSV}

csv_tiers_dr_en_cours:
  url: /tiers/dr-en-cours/csv
  param: {module: dr_export, action: csvTiersDREncours}

export_dr_acheteur_csv:
  url: /acheteur/import/dr/csv
  param: {module: dr_export, action: drAcheteurCsv}

export_dr_validee_csv:
  url: /acheteur/import/utilisateurs/csv
  param: {module: dr_export, action: drValideeCsv}

statistiques:
  url: /statistiques
  param: {module: statistiques, action: index}

message:
  url: /message
  param: {module: global, action: messageAjax}

message_ds:
  url: /message-ds
  param: {module: ds, action: messageAjax}

mentions_legales:
  url: /mentions-legales
  param: {module: contenu, action: mentionsLegales}

contact:
  url: /contact
  param: {module: contenu, action: contact}

a_propos_du_civa:
  url: /a-propos-du-civa
  param: {module: contenu, action: aProposDuCiva}

upload_csv:
  url: /upload/:identifiant/csv
  param: {module: upload, action: monEspaceCiva}
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

upload_list:
  url: /upload-list
  param: {module: upload, action: csvList}

csv_view:
  url: /upload/:identifiant/csv/:md5
  param: {module: upload, action: csvView}
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

csv_download:
  url: /download/:identifiant/csv
  param: {module: upload, action: csvDownload}
  class: EtablissementRoute
  options: { model: Etablissement, type: object }
  requirements: { sf_method: [get, post] }

task_list:
  url: /taches
  param: {module: task, action: list}

task_info:
  url: /taches/:namespace/:slug/infos
  param: {module: task, action: info}
  requirements:
    namespace: '[a-zA-Z0-9_-]+'
    slug: '[a-zA-Z0-9_-]+'

task_run:
  url: /taches/:namespace/:slug/lancer
  param: {module: task, action: run}
  requirements:
    namespace: '[a-zA-Z0-9_-]+'
    slug: '[a-zA-Z0-9_-]+'

default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
